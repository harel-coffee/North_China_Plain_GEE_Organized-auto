library(cowplot)
library(stringr)
library(comprehenr)
library(ggpubr)
scientific_10 <- function(x) {
parse(text=gsub("e", " %*% 10^", scales::scientific_format()(x)))
}
data.accuracy = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Accuracy_comparision.csv",sep=""),
stringsAsFactors = T) %>%
mutate(Source = str_replace(Source, "My", "This study")) %>%
filter(year>=1990) %>%
filter((Source == 'This study') | (Source == 'GAIA')
| (Source == 'GIS')| (Source == 'Global Landcover 30'))
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)
data_2_3_point = data.area_change %>%
filter((Source == 'GHSL') |(Source == 'GIS')|(Source == 'Global Landcover 30'))%>%
group_by(year,Source) %>%
summarise(area = sum(area_km2)) %>%
mutate(Source = str_replace(Source,'GIS','Global Impervious Surface'))%>%
mutate(Source = str_replace(Source,'Global Landcover 30','GlobeLand30'))
data_2_3_line = data.area_change %>%
filter((Source != 'GHSL') & (Source != 'GIS') & (Source != 'GRUMP 1995')
& (Source != 'Global Landcover 30')) %>%
group_by(year,Source) %>%
summarise(area = sum(area_km2)) %>%
mutate(Source = str_replace(Source, "My", "This study")) %>%
mutate(Source = str_replace(Source,'Global Urban He','Global Urban Expansion'))%>%
mutate(Source = str_replace(Source,'Global Urban Liu','Global Urban Dynamics'))%>%
mutate(Source = str_replace(Source,'MODIS','MCD12Q1'))
p_2_3 = ggplot( data = data_2_3_line, aes(x=year,y=area))  +
geom_line(aes(color=Source),size=1) +
geom_point(data = data_2_3_point,aes(fill=Source),shape=21,size=4) +
scale_fill_manual(values = c('grey70','yellow','#4C886B'))
plt_area_change_compare = p_2_3 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
#axis.text.x.bottom = element_blank(),
legend.position = c(0.32, 0.75),
legend.key = element_rect(fill = NA ),
legend.box = "vertival",
legend.spacing.y = unit(-0.3, "cm"))+
scale_y_continuous(breaks = seq(0,200000,25000),labels = seq(0,20,2.5)) +
scale_x_continuous(breaks = seq(1980,2020,5),minor_breaks = seq(1980,2020,1))+
guides(color = guide_legend(ncol = 1)) +
labs(color = '',
fill  = '',
y = bquote('Area ('*10^5 ~km^2*')'),
x = '')
plt_area_change_compare
data_2_4_point = data.accuracy %>%
filter((Source == 'GIS') |(Source == 'Global Landcover 30'))
data_2_4_line = data.accuracy %>%
filter((Source == 'GAIA') |(Source == 'This study'))
p_2_4 =
ggplot() +
geom_line(data = data_2_4_line,  aes(x=year,y=Overall_ACC,color=Source),size=1) +
geom_point(data = data_2_4_point,aes(x=year,y=Overall_ACC,fill=Source),shape=21,size=4) +
expand_limits(x = c(1990,2020))
plt_acc_compare = p_2_4 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.20, 0.7),
legend.key = element_rect(fill = NA ),
legend.box = "vertical") +
scale_x_continuous(breaks = seq(1990,2020,5) ) +
scale_color_manual(values=c('#B8A105','#F565E3'))+
scale_fill_manual(values=c("#FFFF00","#4C886B")) +
guides(color = guide_legend(ncol = 1)) +
labs(color = '',
fill  = '',
x='Year',
y='Accuracy (%)')
plt_acc_compare
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'))
plt_compare_acc_area
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.svg",
width = 15,
height = 10,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.png",
width = 15,
height = 10,
units = "cm",
dpi=500)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.15,
label.y = 0.6)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.9)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 1)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.5)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.6)
plt_compare_acc_area
plt_compare_acc_area = ggarrange(plt_area_change_compare,
plt_acc_compare,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
plt_compare_acc_area
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.svg",
width = 15,
height = 10,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.png",
width = 15,
height = 10,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.svg",
width = 15,
height = 10,
units = "cm",
dpi=800)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.png",
width = 15,
height = 10,
units = "cm",
dpi=800)
plt_inbands_acc_ribbon
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.svg",
width = 16.5,
height = 14,
units = "cm",
dpi=800)
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.png",
width = 16.5,
height = 14,
units = "cm",
dpi=800)
plt_compare_original_temporal_acc
plt_area_change
ggsave(plot = plt_area_change,
"../Section_2_2_Area_change.svg",
width = 13,
height =10,
units = "cm",
dpi=800)
ggsave(plot = plt_area_change,
"../Section_2_2_Area_change.png",
width = 13,
height =10,
units = "cm",
dpi=800)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
#________________________step 1: read data and format the df________________________
data.p_7_acc_sentinel = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy_landsat_sentinel.csv",sep=""),
stringsAsFactors = T)
data.p_7_acc_landsat = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy.csv",sep=""),
stringsAsFactors = T)
# mutate the df so we can get 'Sentinel/Landsat' and 'Year range' seperately
data.p_7_acc_landsat = data.p_7_acc_landsat %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-') %>%
filter(year_range != '2014-2016') %>%
filter(year_range != '2017-2019')
data.p_7_acc_sentinel = data.p_7_acc_sentinel %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-')
# concat two df together and make figure
data.p_7 = rbind(data.p_7_acc_landsat,data.p_7_acc_sentinel)
plt_classification_acc = data.p_7 %>%
ggplot(aes(x=year_range,y=Overall_ACC,group=1)) +
stat_summary(aes(color='Accuracy(se)'),
fun  = 'mean',
geom = 'line') +
stat_summary(aes(fill='Accuracy(se)'),
fun.data = 'mean_se',
geom='ribbon',
alpha = 1/5,
color='grey98') +
labs(x = 'Year',
y ='Accuracy (%)') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.65, 0.8)) +
scale_color_manual(values = c('#3081BA')) +
scale_fill_manual(values = c('#3081BA')) +
labs(color = '',
fill = '')
plt_classification_acc
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
mutate(year = str_replace(year,'_','-')) %>%
mutate(Mask = as.numeric(window - 1))
data.temporal_area = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_area.csv",sep=""),
stringsAsFactors = T)
data.temporal_2  =  data.temporal_area %>%
pivot_longer(cols = colnames(data.temporal_area)[2:length(colnames(data.temporal_area))],
names_to = 'Year',
values_to = 'Accuracy') %>%
mutate(Year = str_replace(Year,'_','-')) %>%
mutate(Year = str_replace(Year,'X',''))
p_2_1 = data.temporal_1 %>%
ggplot(aes(x=Mask,y=accuracy))+
stat_summary(aes(color='Accuracy(se)'),
fun = 'mean',
geom = 'line',) +
stat_summary(aes(fill='Accuracy(se)'),
fun.data = 'mean_se',
geom = 'ribbon',
alpha=1/5) +
scale_color_manual(values = c('#4990C2')) +
scale_fill_manual(values = c('#4990C2')) +
labs(color = '',fill ='')
plt_temporal_window_accuracy = p_2_1 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.89,0.4)) +
xlab('Mask number')+
ylab('Overall Accuracy (%)') +
scale_x_continuous(breaks = seq(0,10,1)) +
scale_y_continuous(breaks = seq(0,100,0.5))
plt_temporal_window_accuracy
p_2_2 = data.temporal_2  %>%
ggplot(aes(x=X,y=Accuracy,color=Year)) +
geom_line() +
labs(color = '',fill ='')
plt_temporal_iteration_area = p_2_2 +
guides(col = guide_legend(nrow = 5)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.8,0.85),
legend.key = element_rect(colour = NA, fill = NA)) +
xlab('Iteration number')+
ylab('Area (km2)') +
scale_x_continuous(breaks = seq(0,10,1)) +
scale_y_continuous()
plt_temporal_iteration_area
#__________step 4: combie window_acc and iteration_acc together_____________
plt_window_iteration =  plot_grid(plt_temporal_window_accuracy,
plt_temporal_iteration_area,
label_x = 0.5,
align = 'v',
label_y = 1,
vjust = 1.8,
nrow = 2,
rel_widths = c(1,1),
labels = c('a)','b)'),
label_size = 12,
label_fontface = 'plain')
plt_window_iteration
plt_window_iteration
plt_window_iteration
Temporal_checked_df = data.temporal_1 %>%
filter(window == 3) %>%
filter(iteration == 9)
p_2_3 = ggplot() +
######## Original accuracy
stat_summary(data = data.p_7,
group=1,
mapping = aes(x=year_range, y=Overall_ACC),
fun.data  = 'mean_se',
fill = '#FF9D47',
geom= 'ribbon',
alpha = 1/5,
color = 'grey95') +
stat_summary(data = data.p_7,
group=1,
mapping = aes(x=year_range,y=Overall_ACC,color = 'Original Accuracy'),
fun = 'mean',
geom= 'line')+
labs(x='Year',
y='Accuracy (%)',
color = '',
fill = '') +
######## temporal correction accuracy
geom_line(data = Temporal_checked_df,
group =1,
mapping = aes(x=year,y=accuracy,color = 'Temporal Corrected'))
plt_compare_original_temporal_acc = p_2_3 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.17, 0.9),
legend.key = element_rect(fill = NA ))+
labs(color = '',
fill  = '',
y = 'Accuracy (%)',
x = 'Year') +
scale_y_continuous(breaks = seq(0,100,0.5))
plt_compare_original_temporal_acc
plt_temporal_window_accuracy
plt_temporal_iteration_area
plt_window_iteration
plt_temporal_iteration_area
plt_temporal_iteration_area = p_2_2 +
guides(col = guide_legend(nrow = 5)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.8,0.85),
legend.background = element_blank(),
legend.key = element_rect(colour = NA, fill = NA)) +
xlab('Iteration number')+
ylab('Area (km2)') +
scale_x_continuous(breaks = seq(0,10,1)) +
scale_y_continuous()
plt_temporal_iteration_area
#__________step 4: combie window_acc and iteration_acc together_____________
plt_window_iteration =  plot_grid(plt_temporal_window_accuracy,
plt_temporal_iteration_area,
label_x = 0.5,
align = 'v',
label_y = 1,
vjust = 1.8,
nrow = 2,
rel_widths = c(1,1),
labels = c('a)','b)'),
label_size = 12,
label_fontface = 'plain')
plt_window_iteration
Temporal_checked_df = data.temporal_1 %>%
filter(window == 3) %>%
filter(iteration == 9)
p_2_3 = ggplot() +
######## Original accuracy
stat_summary(data = data.p_7,
group=1,
mapping = aes(x=year_range, y=Overall_ACC),
fun.data  = 'mean_se',
fill = '#FF9D47',
geom= 'ribbon',
alpha = 1/5,
color = 'grey95') +
stat_summary(data = data.p_7,
group=1,
mapping = aes(x=year_range,y=Overall_ACC,color = 'Original Accuracy'),
fun = 'mean',
geom= 'line')+
labs(x='Year',
y='Accuracy (%)',
color = '',
fill = '') +
######## temporal correction accuracy
geom_line(data = Temporal_checked_df,
group =1,
mapping = aes(x=year,y=accuracy,color = 'Temporal Corrected'))
plt_compare_original_temporal_acc = p_2_3 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.17, 0.9),
legend.key = element_rect(fill = NA ))+
labs(color = '',
fill  = '',
y = 'Accuracy (%)',
x = 'Year') +
scale_y_continuous(breaks = seq(0,100,0.5))
plt_compare_original_temporal_acc
plt_temporal_window_accuracy
plt_temporal_iteration_area
plt_window_iteration
plt_compare_original_temporal_acc
ggsave(plot = plt_temporal_window_accuracy,
"../Section_2_1_1_temporal_window_accuracy.png",
width = 20,
height = 12,
units = "cm",
dpi=500)
ggsave(plot = plt_temporal_window_accuracy,
"../Section_2_1_1_temporal_window_accuracy.svg",
width = 20,
height = 12,
units = "cm",
dpi=500)
ggsave(plot = plt_temporal_iteration_area,
"../Section_2_1_2_plt_temporal_iteration_area.png",
width = 20,
height = 10,
units = "cm",
dpi=500)
ggsave(plot = plt_temporal_iteration_area,
"../Section_2_1_2_plt_temporal_iteration_area.svg",
width = 20,
height = 10,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_original_temporal_acc,
"../Section_2_1_2_compare_original_temporal_acc.svg",
width = 16,
height = 9,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_original_temporal_acc,
"../Section_2_1_2_compare_original_temporal_acc.png",
width = 16,
height = 9,
units = "cm",
dpi=500)
plt_temporal_iteration_area

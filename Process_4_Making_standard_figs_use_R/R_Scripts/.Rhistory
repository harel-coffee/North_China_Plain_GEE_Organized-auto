data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year,y=Overall_ACC,group = 'Original'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
data.temporal_1 %>%
arrange(year)
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0)
#_____________________________ make figures ________________________
data.temporal_1  %>%
ggplot(aes(x=Mode,y=Accuracy))+
geom_boxplot()
data.temporal_1  %>%
ggplot(aes(x=Iteration,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')%>%
arrange(year)
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
str(data.temporal_1)
str(data.p_7)
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
levels(sex)(data.p_7$year_range)
levels(data.p_7$year_range)
levels(data.temporal_1$year)
unique(data.p_8$year_range)
data.p_7 = data.p_7 %>% mutate(year = factor(year_range,levels = unique(data.p_8$year_range)))
View(data.p_7)
data.p_8 = data.p_8 %>% mutate(year_range = factor(year_range,levels = unique(data.p_8$year_range)))
data.p_7 = data.p_7 %>% mutate(year_range = factor(year_range,levels = unique(data.p_8$year_range)))
data.temporal_1 = data.temporal_1 %>% mutate(year = factor(year_range,levels = unique(data.p_8$year_range)))
data.temporal_1 = data.temporal_1 %>% mutate(year = factor(year,levels = unique(data.p_8$year_range)))
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0)
data.temporal_1 = data.temporal_1 %>% mutate(year = factor(year,levels = unique(data.p_8$year_range)))
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0)
unique(data.p_8$year_range)
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0) %>% str_replace('_','-')
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0) %>% str_replace(pattern = '_',replacement = '-')
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0) %>% mutate(year = str_replace(year, pattern = '_',replacement = '-'))
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
#________________________________read data, using pate to concat long file path string__________________________________________
data.p_8_original = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_8_Determine_the_threshold_for_the_sum_of_10_random_classification/",
"Result/",
"Threshold_acc_df.csv",sep=""),
stringsAsFactors = T)
# rearrange the year column se we get 'year_range' and type of 'landsat/sentinel'
data.p_8 = data.p_8_original[, !(colnames(data.p_8_original) %in% c("Feature"))]
data.p_8 = data.p_8 %>%
separate(col = Year,into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-') %>%
filter(  !(type =='Landsat'& year_range %in%  c('2014-2016','2017-2019')))
data.p_8 %>%
ggplot(aes(x=Threshold,y=Accuracy,group=Threshold))+
geom_boxplot() +
scale_x_continuous(breaks = seq(0, 10))
#____________________________read the data of accuracy without threshold correction____________________________________________
# read data, using pate to concat long file path string
data.p_7_acc_sentinel = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy_landsat_sentinel.csv",sep=""),
stringsAsFactors = T)
data.p_7_acc_landsat = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy.csv",sep=""),
stringsAsFactors = T)
# mutate the df so we can get 'Sentinel/Landsat' and 'Year range' seperately
data.p_7_acc_landsat = data.p_7_acc_landsat %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-')
data.p_7_acc_sentinel = data.p_7_acc_sentinel %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-')
# concat two df together and make figure
data.p_7 = rbind(data.p_7_acc_landsat,data.p_7_acc_sentinel)
data.p_7 = data.p_7 %>%
filter(  !(type =='Landsat'&
year_range %in%  c('2014-2016','2017-2019'))
)
data.p_8 %>%
ggplot(aes(x=Threshold,y=Accuracy,color = year_range)) +
geom_line()
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0) %>% mutate(year = str_replace(year, pattern = '_',replacement = '-'))
#_____________________________ make figures ________________________
data.temporal_1  %>%
ggplot(aes(x=Mode,y=Accuracy))+
geom_boxplot()
data.temporal_1  %>%
ggplot(aes(x=Iteration,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')%>%
arrange(year)
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')%>%
arrange(year)
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')%>%
arrange(year)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
#________________________________read data, using pate to concat long file path string__________________________________________
data.p_8_original = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_8_Determine_the_threshold_for_the_sum_of_10_random_classification/",
"Result/",
"Threshold_acc_df.csv",sep=""),
stringsAsFactors = T)
# rearrange the year column se we get 'year_range' and type of 'landsat/sentinel'
data.p_8 = data.p_8_original[, !(colnames(data.p_8_original) %in% c("Feature"))]
data.p_8 = data.p_8 %>%
separate(col = Year,into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-') %>%
filter(  !(type =='Landsat'& year_range %in%  c('2014-2016','2017-2019')))
data.p_8 %>%
ggplot(aes(x=Threshold,y=Accuracy,group=Threshold))+
geom_boxplot() +
scale_x_continuous(breaks = seq(0, 10))
#____________________________read the data of accuracy without threshold correction____________________________________________
# read data, using pate to concat long file path string
data.p_7_acc_sentinel = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy_landsat_sentinel.csv",sep=""),
stringsAsFactors = T)
data.p_7_acc_landsat = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_7_Classification_on_img/",
"Result/",
"Classification_Accuracy.csv",sep=""),
stringsAsFactors = T)
# mutate the df so we can get 'Sentinel/Landsat' and 'Year range' seperately
data.p_7_acc_landsat = data.p_7_acc_landsat %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-')
data.p_7_acc_sentinel = data.p_7_acc_sentinel %>%
separate(col = year, into = c('type','start','end'),sep = '_') %>%
unite(col = year_range, start,end,sep='-')
# concat two df together and make figure
data.p_7 = rbind(data.p_7_acc_landsat,data.p_7_acc_sentinel)
data.p_7 = data.p_7 %>%
filter(  !(type =='Landsat'&
year_range %in%  c('2014-2016','2017-2019'))
)
data.p_8 %>%
ggplot(aes(x=Threshold,y=Accuracy,color = year_range)) +
geom_line()
data.p_8 %>%
ggplot(aes(x=Threshold,y=Accuracy,color = year_range)) +
geom_line()
#________________________________read data, using pate to concat long file path string__________________________________________
data.temporal_1 = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Temporal_check_acc.csv",sep=""),
stringsAsFactors = T) %>%
filter(!Mode == 0) %>% mutate(year = str_replace(year, pattern = '_',replacement = '-'))
#_____________________________ make figures ________________________
data.temporal_1  %>%
ggplot(aes(x=Mode,y=Accuracy))+
geom_boxplot()
data.temporal_1  %>%
ggplot(aes(x=Iteration,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')
#_____________________________ make figures ________________________
data.temporal_1  %>%
ggplot(aes(x=Mode,y=Accuracy))+
geom_boxplot()
data.temporal_1  %>%
ggplot(aes(x=Iteration,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')%>%
arrange(year)
data.temporal_1  %>%
ggplot(aes(x=Window,y=Accuracy))+
stat_summary(fun = 'mean',geom = 'line',color='#4990C2') +
stat_summary(fun.data = 'mean_se',geom = 'ribbon',alpha=1/5,fill='#4990C2')
data.p_8 %>%
filter(Threshold == 5)   %>%
######## Original accuracy
ggplot(aes(x=year_range,y=Accuracy,group='Corrected')) +
geom_line() +
######## 10-folds correction accuracy
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#3081BA',color='grey95') +
stat_summary(data = data.p_7,mapping = aes(x=year_range,y=Overall_ACC,group = 'Original'),
fun = 'mean',geom= 'line',color = '#3081BA') +
######## temporal correction accuracy
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy),
fun.data  = 'mean_se',geom= 'ribbon',alpha = 1/5,fill = '#FF9538',color='grey95') +
stat_summary(data = data.temporal_1,mapping = aes(x=year,y=Accuracy,group = 'Corrected'),
fun = 'mean',geom= 'line',color = '#FF9538') +
labs(x='Year Range') +
theme(axis.text.x = element_text(angle = 18,vjust = 0.4))
#________________________________read data, using pate to concat long file path string__________________________________________
data.p_8_original = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)
#________________________________read data, using pate to concat long file path string__________________________________________
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)
#________________________________read data, using pate to concat long file path string__________________________________________
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)
View(data.area_change)
data.area_change = data.area_change[,c('My','GAIA')]
year_start = seq(1990,2017,2)
install.packages('comprehenr')
(comprehenr)
library(comprehenr)
year_range = to_vec(for (yr in year_start) paste((toString(yr)),'-',(toString(yr))))
year_start = seq(1990,2017,3)
year_range = to_vec(for (yr in year_start) paste((toString(yr)),'-',(toString(yr+2))))
year_range
year_range = to_vec(for (yr in year_start) paste((toString(yr)),'-',(toString(yr+2))
,collapse=""))
year_range
year_range = to_vec(for (yr in year_start) paste((toString(yr)),'-',(toString(yr+2)),sep=""))
year_range
data.area_change['year_range'] = year_range
# make plot
data.area_change %>%
ggplot(aes(x=year_range)) +
geom_line(aes(y=My))
# make plot
data.area_change %>%
ggplot(aes(x=year_range)) +
geom_line(aes(y=My,group=1))
# make plot
data.area_change %>%
ggplot(aes(x=year_range)) +
geom_line(aes(y=My,group=1))+
geom_line(aes(y=GAIA,group=1))
# make plot
data.area_change %>%
ggplot(aes(x=year_range)) +
geom_line(aes(y=My,group=1))+
geom_line(aes(y=GAIA,group=2))
# make plot
data.area_change %>%
ggplot(aes(x=year_range)) +
geom_line(aes(y=My,group=1))+
geom_line(aes(y=GAIA,group=1))
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type)) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type,group=1)) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type,group=c(1,2))) +
geom_line()
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type)) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type),group=1) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
ggplot(aes(x=year_range,y=val,color=type,group=1)) +
geom_line()
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val')
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
mutate(type = as.factor(type)) %>%
ggplot(aes(x=year_range,y=val,color=type,group=1)) +
geom_line()
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
mutate(type = as.factor(type))
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
mutate(type = as.factor(type)) %>%
ggplot(aes(x=year_range,y=val,color=type,group='type')) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val') %>%
mutate(type = as.factor(type)) %>%
ggplot(aes(x=year_range,y=val,color=type,group=type)) +
geom_line()
# make plot
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val')  %>%
ggplot(aes(x=year_range,y=val,color=type,group=type)) +
geom_line()
data.area_change %>%
pivot_longer(cols = c('My','GAIA'),names_to = 'type',values_to = 'val')
#________________________________read data, using pate to concat long file path string__________________________________________
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)
View(data.area_change)
# construct the year_range for x axis
year_start = seq(1990,2017,3)
year_range = to_vec(for (yr in year_start) paste((toString(yr)),'-',(toString(yr+2)),sep=""))
data.area_change = data.area_change[,c('My','GAIA')]
# make plot
data.area_change %>%
ggplot(aes(x=year_range,y=count,color=type)) +
geom_line()
# make plot
data.area_change %>%
ggplot(aes(x=year_range,y=count,color=type,group=type)) +
geom_line()

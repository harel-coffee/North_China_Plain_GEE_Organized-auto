dpi=500)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.svg",
width = 19,
height = 12,
units = "cm",
dpi=500)
ggsave(plot = plt_compare_acc_area,
"../Section_2_3_Acc_compare.png",
width = 19,
height = 12,
units = "cm",
dpi=500)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
#________________________step 1: read data and format the df________________________
data.p_6_grid_acc = read.csv(paste("../../Process_1_GEE_Python_Classification/",
"Sub_Process_6_Before_classification_Feature_selection/",
"Result/",
"Grid_acc_tree.csv",sep=""),
stringsAsFactors = T)
p_1_6_1 = data.p_6_grid_acc %>%
filter(In_Bands == 'Spectrum_Normalize_Fourier_Terrain_Meterology') %>%
mutate(Accuracy = Accuracy *100) %>%
ggplot(aes(x=Tree,y=Accuracy)) +
stat_summary(aes(color='Accuracy(se)',group='Accuracy(se)'),
fun = 'mean',
geom = 'line') +
stat_summary(aes(fill = 'Accuracy(se)',group='Accuracy(se)'),
fun.data = 'mean_se',
geom = 'ribbon',
alpha = 1/3)+
scale_color_manual(values = c('#3081BA')) +
scale_fill_manual(values = c('#3081BA')) +
scale_x_continuous(breaks = seq(0,120,20)) +
labs(color = "",
fill  = "",
y = 'Accuracy (%)')
plt_ACC_Tree = p_1_6_1 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line(),
legend.position = c(0.83, 0.7))
plt_ACC_Tree
#___Type_1_ribbon
p_1_6_2 = data.p_6_grid_acc %>%
filter(Tree==100) %>%
mutate(Year = str_replace(Year, "_", "-")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "_", " + ")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "Meterology", "Meteorology")) %>%
mutate(Accuracy = Accuracy *100) %>%
ggplot(aes(x=Year,y=Accuracy,group=In_Bands,color=In_Bands,fill=In_Bands)) +
guides(fill = guide_legend(reverse = TRUE),color = guide_legend(reverse = TRUE))+
stat_summary(fun = 'mean',geom = 'line') +
stat_summary(fun.data = 'mean_se',
geom = 'ribbon',
alpha = 1/3,
size=0.1,
color='grey99')
plt_inbands_acc_ribbon = p_1_6_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30,vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.35, 0.59),
legend.background = element_blank()) +
ylab('Accuracy(%)') +
labs(color = 'Input predictors',
fill = 'Input predictors')
plt_inbands_acc_bar = data.p_6_grid_acc %>%
filter(Tree==100) %>%
mutate(Year = str_replace(Year, "_", "-")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "_", " + ")) %>%
mutate(Accuracy = Accuracy *100) %>%
ggplot(aes(x=Year,y=Accuracy,fill = In_Bands)) +
stat_summary(fun='mean',geom='bar',color='grey90',position = 'dodge') +
coord_cartesian(ylim = c(80,97)) +
labs(fill = 'Input bands') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line()) +
scale_fill_viridis_d(option = 'D')
plt_inbands_acc_ribbon
View(data.p_6_grid_acc)
p_1_6_2
#___Type_1_ribbon
p_1_6_2 = data.p_6_grid_acc %>%
filter(Tree==100) %>%
mutate(Year = str_replace(Year, "_", "-")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "_", " + ")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "Meterology", "Meteorology")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "Spectrum", "Spectral")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "Normalize", "Indices")) %>%
mutate(Accuracy = Accuracy *100) %>%
ggplot(aes(x=Year,y=Accuracy,group=In_Bands,color=In_Bands,fill=In_Bands)) +
guides(fill = guide_legend(reverse = TRUE),color = guide_legend(reverse = TRUE))+
stat_summary(fun = 'mean',geom = 'line') +
stat_summary(fun.data = 'mean_se',
geom = 'ribbon',
alpha = 1/3,
size=0.1,
color='grey99')
plt_inbands_acc_ribbon = p_1_6_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30,vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.35, 0.59),
legend.background = element_blank()) +
ylab('Accuracy(%)') +
labs(color = 'Input predictors',
fill = 'Input predictors')
plt_inbands_acc_bar = data.p_6_grid_acc %>%
filter(Tree==100) %>%
mutate(Year = str_replace(Year, "_", "-")) %>%
mutate(In_Bands = str_replace_all(In_Bands, "_", " + ")) %>%
mutate(Accuracy = Accuracy *100) %>%
ggplot(aes(x=Year,y=Accuracy,fill = In_Bands)) +
stat_summary(fun='mean',geom='bar',color='grey90',position = 'dodge') +
coord_cartesian(ylim = c(80,97)) +
labs(fill = 'Input bands') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.line.y.left = element_line()) +
scale_fill_viridis_d(option = 'D')
plt_inbands_acc_ribbon
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.svg",
width = 20,
height = 13,
units = "cm",
dpi=500)
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.png",
width = 20,
height = 13,
units = "cm",
dpi=500)
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.svg",
width = 20,
height = 13,
units = "cm",
dpi=800)
ggsave(plot = plt_inbands_acc_ribbon,
"../Section_1_6_2_plt_inbands_acc_ribbon.png",
width = 20,
height = 13,
units = "cm",
dpi=800)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
library(comprehenr)
library(stringr)
#________________________step 1: read data and format the df________________________
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)%>%
mutate(year = paste0((year-1),'-',(year+1)))
View(data.area_change)
#______________________step 2: make plot of area change of my study________________________
p_2_2 = data.area_change %>%
mutate(area = sum*30*30/1000/1000) %>%
filter(Source == 'My') %>%
ggplot(aes(x=year,y=area,color=EN_Name,group=EN_Name)) +
geom_line(size=0.5) +
geom_point(size=1.5) +
scale_color_discrete(breaks=c("Shandong","Henan","Hebei","Anhui","Jiangsu","Beijing","Tianjin"))
View(p_2_2)
plt_area_change = p_2_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = bquote('Area ('*10^5 ~km^2*')'),
x = 'Year')
#______________________step 4: save plot to disk________________________
plt_area_change
data.area_change %>%
mutate(area = sum*30*30/1000/1000)
data.area_change %>%
mutate(area = sum*30*30/1000/1000) %>%
filter(Source == 'My')
library(ggplot2)
library(tidyr)
library(dplyr)
library(cowplot)
library(stringr)
library(comprehenr)
library(stringr)
#________________________step 1: read data and format the df________________________
data.area_change = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change.csv",sep=""),
stringsAsFactors = T)%>%
mutate(year = paste0((year-1),'-',(year+1)))
data.area_change_percent = read.csv(paste("../../Process_2_Temporal_Check/",
"Result/",
"Area_change_percent.csv",sep=""),
stringsAsFactors = T)%>%
mutate(year = paste0((year-1),'-',(year+1)))
View(data.area_change_percent)
p_2_2_pct = data.area_change_percent %>%
ggplot(aes(x=year,y=area,color=EN_Name,group=EN_Name)) +
geom_line(size=0.5) +
geom_point(size=1.5) +
scale_color_discrete(breaks=c("Shandong","Henan","Hebei","Anhui","Jiangsu","Beijing","Tianjin"))
p_2_2_pct
View(data.area_change_percent)
p_2_2_pct = data.area_change_percent %>%
ggplot(aes(x=year,y=Percent.comparasion,color=EN_Name,group=EN_Name)) +
geom_line(size=0.5) +
geom_point(size=1.5) +
scale_color_discrete(breaks=c("Shandong","Henan","Hebei","Anhui","Jiangsu","Beijing","Tianjin"))
p_2_2_pct
plt_area_change_pct = plt_area_change +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_change_pct
plt_area_change_pct = p_2_2_pct +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_change_pct
#______________________step 2: make plot of area change of my study________________________
p_2_2 = data.area_change %>%
mutate(area = sum*30*30/1000/1000) %>%
filter(Source == 'My') %>%
ggplot(aes(x=year,y=area,color=EN_Name,group=EN_Name)) +
geom_line(size=0.5) +
geom_point(size=1.5) +
scale_color_discrete(breaks=c("Shandong","Henan","Hebei","Anhui","Jiangsu","Beijing","Tianjin"))
p_2_2_pct = data.area_change_percent %>%
ggplot(aes(x=year,y=Percent.comparasion,color=EN_Name,group=EN_Name)) +
geom_line(size=0.5) +
geom_point(size=1.5) +
scale_color_discrete(breaks=c("Shandong","Henan","Hebei","Anhui","Jiangsu","Beijing","Tianjin"))
plt_area_change = p_2_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = bquote('Area ('*10^5 ~km^2*')'),
x = 'Year')
plt_area_change_pct = p_2_2_pct +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
library(ggarrange)
ggarrange
install.packages(ggarrange)
library(ggarrange)
library(ggarrange)
library(ggpubr)
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
plt_area_pct
plt_area_change = p_2_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = bquote('Area ('*10^5 ~km^2*')'),
x = '')
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
plt_area_pct
plt_area_change = p_2_2 +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_blank(), # remove x-axis text
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = bquote('Area ('*10^5 ~km^2*')'),
x = '') # remove x label
plt_area_change
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.2,
label.y = 0.7)
plt_area_pct
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.15,
label.y = 0.9)
plt_area_pct
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.svg",
width = 19,
height =10,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.png",
width = 19,
height =10,
units = "cm",
dpi=500)
plt_area_change_pct = p_2_2_pct +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_change_pct
plt_area_change_pct = p_2_2_pct +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
scale_y_continuous(breaks = seq(0,200000,5000),labels = seq(0,20,0.5)) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_change_pct
plt_area_change_pct = p_2_2_pct +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_line(),
axis.text.x = element_text(angle = 30, vjust = 0.5),
axis.line.y.left = element_line(),
legend.position = c(0.13, 0.75),
legend.key = element_rect(fill = NA ),
legend.background = element_blank()) +
labs(color = '',
fill  = '',
y = 'Percent Change(%)',
x = 'Year')
plt_area_change_pct
plt_area_pct = ggarrange(plt_area_change,
plt_area_change_pct,
align = 'v',
ncol=1,
nrow=2,
common.legend = TRUE,
legend="right",
labels = c('a)','b)'),
label.x = 0.15,
label.y = 0.9)
#______________________step 4: save plot to disk________________________
plt_area_pct
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.svg",
width = 19,
height =10,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.png",
width = 19,
height =10,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.svg",
width = 15,
height =15,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.png",
width = 15,
height =15,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.svg",
width = 19,
height =15,
units = "cm",
dpi=500)
ggsave(plot = plt_area_pct,
"../Section_2_2_Area_change.png",
width = 19,
height =15,
units = "cm",
dpi=500)
